generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String           @id @default(cuid())
  name      String?
  email     String           @unique
  password  String
  token     String?
  sessions  Session[]
  role      UserRole         @default(EMPLOYEE)
  profile   EmployeeProfile?
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  @@index([email])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model EmployeeProfile {
  id          String         @id @default(cuid())
  firstName   String
  lastName    String
  dateOfBirth DateTime
  address     String?
  phoneNumber String?
  attendance  Attendance[]
  teams       Team[]         @relation("EmployeeTeams")
  user        User           @relation(fields: [userId], references: [id])
  userId      String         @unique
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  Equipment   Equipment[]
  cheques     ChequeRecord[]
}

model Attendance {
  id        String          @id @default(cuid())
  profile   EmployeeProfile @relation(fields: [userId], references: [userId])
  userId    String
  date      DateTime
  timeIn    DateTime
  timeOut   DateTime?
  reason    String?
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model Equipment {
  id                 String           @id @default(cuid())
  name               String
  serviceTag         String           @unique
  expressServiceCode String?          @unique
  configuration      String?
  price              Float
  warrantyTill       DateTime?
  manufacturer       String
  issuedTo           EmployeeProfile? @relation(fields: [employeeId], references: [id])
  chequeRecords      ChequeRecord[]
  employeeId         String?
  issuedAt           DateTime
  returnedAt         DateTime?
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
}

model ChequeRecord {
  id          String          @id @default(cuid())
  chequeNo    String
  employee    EmployeeProfile @relation(fields: [employeeId], references: [id])
  equipment   Equipment       @relation(fields: [equipmentId], references: [id])
  equipmentId String
  employeeId  String
  amount      Float
  date        DateTime
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Team {
  id        String            @id @default(cuid())
  name      String
  employees EmployeeProfile[] @relation("EmployeeTeams")
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

enum UserRole {
  EMPLOYEE
  ADMIN
  HR
}
